drop table if exists halls, seats, movies, shows, show_seats, clients, orders, tickets cascade;

create table halls
(
    id     int primary key generated by default as identity,
    actual bool default true,
    name   varchar(255) not null,
    unique (actual, name)
);

create table seats
(
    id       bigint primary key generated by default as identity,
    hidden   bool default false,
    row_name varchar(16) not null,
    set_name varchar(16) not null,
    hall_id  int         not null references halls (id),
    unique (row_name, set_name)
);

create table movies
(
    id     int primary key generated by default as identity,
    actual bool default true,
    name   varchar(255) not null,
    unique (actual, name)
);

create table shows
(
    id       int primary key generated by default as identity,
    actual   bool default true,
    start_at timestamp without time zone not null,
    end_at   timestamp without time zone not null,
    movie_id int                         not null references movies (id),
    hall_id  int                         not null references halls (id),
    unique (actual, hall_id, start_at)
);

create table clients
(
    id    bigint primary key generated by default as identity,
    name  varchar(255) not null,
    email varchar(255) not null unique
);

create table orders
(
    id          bigint primary key generated by default as identity,
    created_at  timestamp with time zone not null default current_timestamp,
    deadline_at timestamp with time zone default null,
    client_id   bigint                   not null references clients (id)
);

create table tickets
(
    id          bigint primary key generated by default as identity,
    cost        decimal not null,
    order_id    bigint  not null references orders (id),
    show_id     int     not null references shows (id),
    seat_id     bigint  not null references seats (id),
    paid_at     timestamp with time zone default null,
    canceled_at timestamp with time zone default null,
    actual      bool default true,
    unique (actual, show_id, seat_id),
    check (actual != false),
    check (actual = true and canceled_at is null)
);

create table show_seats
(
    id               bigint primary key generated by default as identity,
    cost             decimal not null,
    show_id          int     not null references shows (id),
    seat_id          bigint  not null references seats (id),
    ticket_id        bigint unique references tickets (id),
    lock_id          varchar(128),
    lock_deadline_at timestamp with time zone,
    unique (show_id, seat_id)
);
